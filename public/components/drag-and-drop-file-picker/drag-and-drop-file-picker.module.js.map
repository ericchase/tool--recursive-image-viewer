{
  "version": 3,
  "sources": ["..\\..\\..\\src\\lib\\ericchase\\Design Pattern\\Observer\\Store.ts", "..\\..\\..\\src\\lib\\ericchase\\Utility\\UpdateMarker.ts", "..\\..\\..\\src\\lib\\ericchase\\Utility\\Console.ts", "..\\..\\..\\src\\lib\\ericchase\\Utility\\JobQueue.ts", "..\\..\\..\\src\\lib\\ericchase\\Utility\\RecursiveAsyncIterator.ts", "..\\..\\..\\src\\lib\\ericchase\\Utility\\Sleep.ts", "..\\..\\..\\src\\lib\\ericchase\\Utility\\Guard.ts", "..\\..\\..\\src\\lib\\ericchase\\Web API\\DataTransferItem.ts", "..\\..\\..\\src\\lib\\ericchase\\Web API\\DataTransferItem_Utility.ts", "..\\..\\..\\src\\lib\\ericchase\\Web API\\File.ts", "..\\..\\..\\src\\lib\\ericchase\\Web API\\FileSystemDirectoryEntry.ts", "..\\..\\..\\src\\lib\\ericchase\\Web API\\FileSystemEntry.ts", "..\\..\\..\\src\\lib\\ericchase\\Web API\\FileSystem_Utility.ts", "..\\..\\..\\src\\lib\\ericchase\\Web API\\Device.ts", "..\\..\\..\\src\\lib\\ericchase\\Web API\\HTMLInputElement.ts", "..\\..\\..\\src\\components\\drag-and-drop-file-picker\\drag-and-drop-file-picker.module.ts"],
  "sourcesContent": [
    "export type SubscriptionCallback<Value> = (value: Value, unsubscribe: () => void) => void;\nexport type UpdateCallback<Value> = (value: Value) => Value;\n\nexport class ConstantStore<Value> {\n  protected subscriptionSet = new Set<SubscriptionCallback<Value>>();\n  constructor(protected value?: Value) {}\n  subscribe(callback: SubscriptionCallback<Value>): () => void {\n    this.subscriptionSet.add(callback);\n    if (this.value !== undefined) {\n      callback(this.value, () => {\n        this.subscriptionSet.delete(callback);\n      });\n    }\n    return () => {\n      this.subscriptionSet.delete(callback);\n    };\n  }\n  get(): Promise<Value> {\n    return new Promise<Value>((resolve) => {\n      this.subscribe((value, unsubscribe) => {\n        unsubscribe();\n        resolve(value);\n      });\n    });\n  }\n  set(value: Value): void {\n    if (this.value === undefined) {\n      this.value = value;\n      for (const callback of this.subscriptionSet) {\n        callback(value, () => {\n          this.subscriptionSet.delete(callback);\n        });\n      }\n    }\n  }\n}\n\nexport class OptionalStore<Value> {\n  protected store: Store<Value | undefined>;\n  constructor(notifyOnChangeOnly = false) {\n    this.store = new Store<Value | undefined>(undefined, notifyOnChangeOnly);\n  }\n  subscribe(callback: SubscriptionCallback<Value | undefined>): () => void {\n    return this.store.subscribe(callback);\n  }\n  get(): Promise<Value | undefined> {\n    return new Promise<Value | undefined>((resolve) => {\n      this.subscribe((value, unsubscribe) => {\n        unsubscribe();\n        resolve(value);\n      });\n    });\n  }\n  set(value: Value | undefined): void {\n    this.store.set(value);\n  }\n  update(callback: UpdateCallback<Value | undefined>): void {\n    this.store.update(callback);\n  }\n}\n\nexport class Store<Value> {\n  protected currentValue: Value;\n  protected subscriptionSet = new Set<SubscriptionCallback<Value>>();\n  constructor(\n    protected initialValue: Value,\n    protected notifyOnChangeOnly = false,\n  ) {\n    this.currentValue = initialValue;\n  }\n  subscribe(callback: SubscriptionCallback<Value>): () => void {\n    this.subscriptionSet.add(callback);\n    const unsubscribe = () => {\n      this.subscriptionSet.delete(callback);\n    };\n    callback(this.currentValue, unsubscribe);\n    return unsubscribe;\n  }\n  get(): Promise<Value> {\n    return new Promise<Value>((resolve) => {\n      this.subscribe((value, unsubscribe) => {\n        unsubscribe();\n        resolve(value);\n      });\n    });\n  }\n  set(value: Value): void {\n    if (this.notifyOnChangeOnly && this.currentValue === value) return;\n    this.currentValue = value;\n    for (const callback of this.subscriptionSet) {\n      callback(value, () => {\n        this.subscriptionSet.delete(callback);\n      });\n    }\n  }\n  update(callback: UpdateCallback<Value>): void {\n    this.set(callback(this.currentValue));\n  }\n}\n\nexport function CompoundSubscription<T extends any[]>(stores: { [K in keyof T]: Store<T[K]> | OptionalStore<T[K]> }, callback: SubscriptionCallback<{ [K in keyof T]: T[K] | undefined }>): () => void {\n  const unsubs: (() => void)[] = [];\n  const unsubscribe = () => {\n    for (const unsub of unsubs) {\n      unsub();\n    }\n  };\n  const values = [] as { [K in keyof T]: T[K] | undefined };\n  const callback_handler = () => {\n    if (values.length === stores.length) {\n      callback(values, unsubscribe);\n    }\n  };\n  for (let i = 0; i < stores.length; i++) {\n    stores[i].subscribe((value, unsubscribe) => {\n      values[i] = value;\n      unsubs[i] = unsubscribe;\n      if (values.length === stores.length) {\n        callback_handler();\n      }\n    });\n  }\n  return unsubscribe;\n}\n\nexport function Once<Value, T extends { subscribe(callback: SubscriptionCallback<Value>): () => void }>(subscribable: T) {\n  return new Promise<Value>((resolve, reject) => {\n    try {\n      let once = false;\n      subscribable.subscribe((value, unsubscribe) => {\n        if (once === true) {\n          unsubscribe();\n          return resolve(value);\n        }\n        once = true;\n      });\n    } catch (error) {\n      return reject(error);\n    }\n  });\n}\n",
    "export class UpdateMarker {\n  updated = false;\n  constructor(readonly $manager: UpdateMarkerManager) {}\n  reset() {\n    this.$manager.resetMarker(this);\n  }\n}\n\nexport class UpdateMarkerManager {\n  $marks = new Set<UpdateMarker>();\n  getNewMarker() {\n    const marker = new UpdateMarker(this);\n    this.$marks.add(marker);\n    return marker;\n  }\n  resetMarker(mark: UpdateMarker) {\n    mark.updated = false;\n    this.$marks.add(mark);\n  }\n  updateMarkers() {\n    for (const mark of this.$marks) {\n      this.$marks.delete(mark);\n      mark.updated = true;\n    }\n  }\n}\n\nexport class DataSetMarker<T> {\n  dataset = new Set<T>();\n  constructor(readonly $manager: DataSetMarkerManager<T>) {}\n  reset() {\n    this.$manager.resetMarker(this);\n  }\n}\n\nexport class DataSetMarkerManager<T> {\n  $marks = new Set<DataSetMarker<T>>();\n  getNewMarker() {\n    const marker = new DataSetMarker<T>(this);\n    this.$marks.add(marker);\n    return marker;\n  }\n  resetMarker(mark: DataSetMarker<T>) {\n    mark.dataset.clear();\n    this.$marks.add(mark);\n  }\n  updateMarkers(data: T) {\n    for (const mark of this.$marks) {\n      mark.dataset.add(data);\n    }\n  }\n}\n",
    "import { UpdateMarkerManager } from './UpdateMarker.js';\n\nconst marker_manager = new UpdateMarkerManager();\nlet newline_count = 0;\n\nexport function GetConsoleMarker() {\n  return marker_manager.getNewMarker();\n}\n\nexport function ConsoleError(...items: any[]) {\n  // biome-ignore lint: this let's us search for undesired console[error]s\n  console['error'](...items);\n  newline_count = 0;\n  marker_manager.updateMarkers();\n}\n\nexport function ConsoleErrorWithDate(...items: any[]) {\n  // biome-ignore lint: this let's us search for undesired console[error]s\n  console['error'](`[${new Date().toLocaleTimeString()}]`, ...items);\n  newline_count = 0;\n  marker_manager.updateMarkers();\n}\n\nexport function ConsoleLog(...items: any[]) {\n  // biome-ignore lint: this let's us search for undesired console[log]s\n  console['log'](...items);\n  newline_count = 0;\n  marker_manager.updateMarkers();\n}\n\nexport function ConsoleLogWithDate(...items: any[]) {\n  // biome-ignore lint: this let's us search for undesired console[log]s\n  console['log'](`[${new Date().toLocaleTimeString()}]`, ...items);\n  newline_count = 0;\n  marker_manager.updateMarkers();\n}\n\nexport function ConsoleNewline(ensure_count = 1) {\n  for (let i = newline_count; i < ensure_count; i++) {\n    // biome-ignore lint: this let's us search for undesired console[log]s\n    console['log']();\n    newline_count++;\n  }\n  marker_manager.updateMarkers();\n}\n\nexport function ConsoleLogToLines(items: Iterable<any>) {\n  if (typeof items === 'string') {\n    ConsoleLog(items);\n  } else {\n    for (const item of items) {\n      ConsoleLog(item);\n    }\n  }\n}\n\nexport function ConsoleErrorToLines(items: Iterable<any>) {\n  if (typeof items === 'string') {\n    ConsoleError(items);\n  } else {\n    for (const item of items) {\n      ConsoleError(item);\n    }\n  }\n}\n",
    "import { Store } from '../Design Pattern/Observer/Store.js';\nimport { ConsoleLog } from './Console.js';\n\nexport type SubscriptionCallback<Result, Tag> = (result?: Result, error?: Error, tag?: Tag) => { abort: boolean } | void;\n\nexport class JobQueue<Result = void, Tag = void> {\n  /**\n   * 0: No delay. -1: Consecutive.\n   */\n  constructor(public delay_ms: number) {}\n  /**\n   * ! Watch out for circular calls !\n   *\n   * Sets the `aborted` state and resolves when currently running jobs finish.\n   */\n  public async abort() {\n    this.aborted = true;\n    await this.done;\n  }\n  public add(fn: () => Promise<Result>, tag?: Tag) {\n    if (this.aborted === false) {\n      this.queue.push({ fn, tag });\n      if (this.running === false) {\n        this.running = true;\n        this.run();\n      }\n    }\n  }\n  /**\n   * Returns a promise that resolves when jobs finish.\n   */\n  public get done() {\n    return new Promise<void>((resolve) => {\n      this.runningCount.subscribe((count) => {\n        if (count === 0) resolve();\n      });\n    });\n  }\n  /**\n   * Resets the JobQueue to an initial state, keeping subscriptions alive.\n   *\n   * @throws If called when jobs are currently running.\n   */\n  public async reset() {\n    if (this.running === true || (await this.runningCount.get()) > 0) {\n      throw 'Warning: Wait for running jobs to finish before calling reset. `await JobQueue.done;`';\n    }\n    this.aborted = false;\n    this.completionCount = 0;\n    this.queue.length = 0;\n    this.queueIndex = 0;\n    this.results.length = 0;\n  }\n  public subscribe(callback: SubscriptionCallback<Result, Tag>): () => void {\n    this.subscriptionSet.add(callback);\n    for (const result of this.results) {\n      if (callback(result.value, result.error)?.abort === true) {\n        this.subscriptionSet.delete(callback);\n        return () => {};\n      }\n    }\n    return () => {\n      this.subscriptionSet.delete(callback);\n    };\n  }\n  protected aborted = false;\n  protected completionCount = 0;\n  protected queue: { fn: () => Promise<Result>; tag?: Tag }[] = [];\n  protected queueIndex = 0;\n  protected results: { value?: Result; error?: Error }[] = [];\n  protected running = false;\n  protected runningCount = new Store(0);\n  protected subscriptionSet = new Set<SubscriptionCallback<Result, Tag>>();\n  protected run() {\n    if (this.aborted === false && this.queueIndex < this.queue.length) {\n      const { fn, tag } = this.queue[this.queueIndex++];\n      /* eslint-disable @typescript-eslint/no-floating-promises */\n      (async () => {\n        /* eslint-enable @typescript-eslint/no-floating-promises */\n        this.runningCount.update((count) => {\n          return count + 1;\n        });\n        try {\n          const value = await fn();\n          this.send({ value, tag });\n        } catch (error: any) {\n          ConsoleLog(error);\n          this.send({ error, tag });\n        }\n        this.runningCount.update((count) => {\n          return count - 1;\n        });\n        if (this.delay_ms < 0) {\n          this.run();\n        }\n      })();\n      if (this.delay_ms >= 0) {\n        setTimeout(() => this.run(), this.delay_ms);\n      }\n    } else {\n      this.running = false;\n    }\n  }\n  protected send(result: { value?: Result; error?: Error; tag?: Tag }) {\n    if (this.aborted === false) {\n      this.completionCount++;\n      this.results.push(result);\n      for (const callback of this.subscriptionSet) {\n        if (callback(result.value, result.error, result.tag)?.abort === true) {\n          this.subscriptionSet.delete(callback);\n        }\n      }\n    }\n  }\n}\n",
    "import type { SyncAsyncIterable } from './Types.js';\n\nexport class RecursiveIterator<In, Out> {\n  constructor(protected fn: (value: SyncAsyncIterable<In>, push: (value: SyncAsyncIterable<In>) => void) => SyncAsyncIterable<Out>) {}\n  async *iterate(init: SyncAsyncIterable<In>): SyncAsyncIterable<Out> {\n    const list: SyncAsyncIterable<In>[] = [init];\n    for (let i = 0; i < list.length; i++) {\n      for await (const item of this.fn(list[i], (value) => {\n        list.push(value);\n      })) {\n        yield item;\n      }\n    }\n  }\n}\n",
    "export async function Sleep(ms: number) {\n  await new Promise((resolve) => setTimeout(resolve, ms));\n}\n",
    "// Issues with falsey branch.\n// export function HasMethod<T extends object = object>(item: unknown, key: keyof T): item is T & Record<typeof key, (...args: any[]) => any> {\n//   return typeof item === 'object' && item !== null && key in item && typeof (item as Record<typeof key, unknown>)[key] === 'function';\n// }\nexport function HasMethod(item: unknown, key: string): item is Record<string, (...args: any[]) => any> {\n  return typeof item === 'object' && item !== null && key in item && typeof (item as Record<string, unknown>)[key] === 'function';\n}\n\n// Does not seem to have the same issues as above\nexport function HasProperty<T extends object = object>(item: unknown, key: keyof T): item is T & Record<typeof key, (...args: any[]) => any> {\n  return typeof item === 'object' && item !== null && key in item && typeof (item as Record<typeof key, unknown>)[key] !== 'undefined';\n}\n",
    "import { HasMethod } from '../Utility/Guard.js';\n\nexport function Compat_DataTransferItem(item?: DataTransferItem) {\n  return {\n    getAsEntry(): Exclude<ReturnType<DataTransferItem['webkitGetAsEntry']>, null> | undefined {\n      if (HasMethod(item, 'getAsEntry')) {\n        return item.getAsEntry() ?? undefined;\n      }\n      if (HasMethod(item, 'webkitGetAsEntry')) {\n        return item.webkitGetAsEntry() ?? undefined;\n      }\n    },\n    getAsFile(): Exclude<ReturnType<DataTransferItem['getAsFile']>, null> | undefined {\n      if (HasMethod(item, 'getAsFile')) {\n        return item.getAsFile() ?? undefined;\n      }\n    },\n    getAsString(): Promise<Parameters<Exclude<Parameters<DataTransferItem['getAsString']>[0], null>>[0] | undefined> {\n      if (HasMethod(item, 'getAsString')) {\n        return new Promise((resolve, reject) => {\n          try {\n            item.getAsString(resolve);\n          } catch (error) {\n            reject(error);\n          }\n        });\n      }\n      return Promise.resolve(undefined);\n    },\n  };\n}\n",
    "import type { N } from '../Utility/Types.js';\nimport { Compat_DataTransferItem } from './DataTransferItem.js';\n\nexport class DataTransferItemIterator {\n  list: DataTransferItem[] = [];\n  constructor(items?: N<DataTransferItem> | DataTransferItemList | null) {\n    if (items) {\n      if (Array.isArray(items)) {\n        this.list = items;\n      } else if ('length' in items) {\n        this.list = Array.from(items);\n      } else {\n        this.list = [items];\n      }\n    }\n  }\n  *getAsEntry(): Generator<FileSystemEntry> {\n    for (const item of this.list) {\n      const entry: FileSystemEntry | undefined = Compat_DataTransferItem(item).getAsEntry();\n      if (entry) yield entry;\n    }\n  }\n  *getAsFile(): Generator<File> {\n    for (const item of this.list) {\n      const file: File | undefined = Compat_DataTransferItem(item).getAsFile();\n      if (file) yield file;\n    }\n  }\n  async *getAsString(): AsyncGenerator<string> {\n    for (const item of this.list) {\n      const task: string | undefined = await Compat_DataTransferItem(item).getAsString();\n      if (task) yield task;\n    }\n  }\n}\n",
    "import { HasProperty } from '../Utility/Guard.js';\n\nexport function Compat_File(file?: File) {\n  return {\n    get lastModified(): File['lastModified'] | undefined {\n      return HasProperty(file, 'lastModified') ? file.lastModified : undefined;\n    },\n    get name(): File['name'] | undefined {\n      return HasProperty(file, 'name') ? file.name : undefined;\n    },\n    get webkitRelativePath(): File['webkitRelativePath'] | undefined {\n      return HasProperty(file, 'webkitRelativePath') ? file.webkitRelativePath : undefined;\n    },\n  };\n}\n",
    "import { HasMethod } from '../Utility/Guard.js';\n\nexport function Compat_FileSystemDirectoryEntry(entry?: FileSystemDirectoryEntry) {\n  return {\n    createReader(): ReturnType<FileSystemDirectoryEntry['createReader']> | undefined {\n      if (HasMethod(entry, 'createReader')) {\n        return entry.createReader() ?? undefined;\n      }\n    },\n    getDirectory(path: Parameters<FileSystemDirectoryEntry['getDirectory']>[0], options: Parameters<FileSystemDirectoryEntry['getDirectory']>[1]): Promise<Parameters<FileSystemDirectoryEntry['getDirectory']>[2] | undefined> {\n      if (HasMethod(entry, 'getDirectory')) {\n        return new Promise((resolve, reject) => {\n          entry.getDirectory(path, options, () => resolve, reject);\n        });\n      }\n      return Promise.resolve(undefined);\n    },\n    getFile(path: Parameters<FileSystemDirectoryEntry['getFile']>[0], options: Parameters<FileSystemDirectoryEntry['getFile']>[1]): Promise<Parameters<FileSystemDirectoryEntry['getFile']>[0] | undefined> {\n      if (HasMethod(entry, 'getFile')) {\n        return new Promise((resolve, reject) => {\n          entry.getFile(path, options, () => resolve, reject);\n        });\n      }\n      return Promise.resolve(undefined);\n    },\n  };\n}\n",
    "import { HasMethod, HasProperty } from '../Utility/Guard.js';\n\nexport function Compat_FileSystemEntry(entry?: FileSystemEntry) {\n  return {\n    get filesystem(): FileSystemEntry['filesystem'] | undefined {\n      return HasProperty(entry, 'filesystem') ? entry.filesystem : undefined;\n    },\n    get fullPath(): FileSystemEntry['fullPath'] | undefined {\n      return HasProperty(entry, 'fullPath') ? entry.fullPath : undefined;\n    },\n    get isDirectory(): FileSystemEntry['isDirectory'] | undefined {\n      return HasProperty(entry, 'isDirectory') ? entry.isDirectory : undefined;\n    },\n    get isFile(): FileSystemEntry['isFile'] | undefined {\n      return HasProperty(entry, 'isFile') ? entry.isFile : undefined;\n    },\n    get name(): FileSystemEntry['name'] | undefined {\n      return HasProperty(entry, 'name') ? entry.name : undefined;\n    },\n    getParent(): Promise<Parameters<Exclude<Parameters<FileSystemEntry['getParent']>[0], undefined>>[0] | undefined> {\n      if (HasMethod(entry, 'getParent')) {\n        return new Promise((resolve, reject) => {\n          entry.getParent(resolve, reject);\n        });\n      }\n      return Promise.resolve(undefined);\n    },\n  };\n}\n",
    "import { Compat_FileSystemDirectoryEntry } from './FileSystemDirectoryEntry.js';\nimport { Compat_FileSystemEntry } from './FileSystemEntry.js';\n\nexport class FileSystemEntryIterator {\n  list: FileSystemEntry[] = [];\n  constructor(entries?: FileSystemEntry | FileSystemEntry[] | null) {\n    if (entries) {\n      if (Array.isArray(entries)) {\n        this.list = entries;\n      } else {\n        this.list = [entries];\n      }\n    }\n  }\n  *getDirectoryEntry(): Generator<FileSystemDirectoryEntry> {\n    for (const entry of this.list) {\n      if (Compat_FileSystemEntry(entry).isDirectory) {\n        yield entry as FileSystemDirectoryEntry;\n      }\n    }\n  }\n  *getFileEntry(): Generator<FileSystemFileEntry> {\n    for (const entry of this.list) {\n      if (Compat_FileSystemEntry(entry).isFile) {\n        yield entry as FileSystemFileEntry;\n      }\n    }\n  }\n}\n\nexport class FileSystemDirectoryEntryIterator {\n  list: FileSystemDirectoryEntry[] = [];\n  constructor(entries?: FileSystemDirectoryEntry | FileSystemDirectoryEntry[] | null) {\n    if (entries) {\n      if (Array.isArray(entries)) {\n        this.list = entries;\n      } else {\n        this.list = [entries];\n      }\n    }\n  }\n  async *getEntry(): AsyncGenerator<FileSystemEntry> {\n    for (const entry of this.list) {\n      const reader = Compat_FileSystemDirectoryEntry(entry).createReader();\n      if (reader) {\n        for (const entry of await new Promise<FileSystemEntry[]>((resolve, reject) => reader.readEntries(resolve, reject))) {\n          yield entry;\n        }\n      }\n    }\n  }\n}\n",
    "export function IsDeviceMobile(): boolean {\n  return /android|iphone|mobile/i.test(window.navigator.userAgent);\n}\n",
    "import { HasProperty } from '../Utility/Guard.js';\nimport { IsDeviceMobile } from './Device.js';\n\nexport function Compat_HTMLInputElement(input?: HTMLInputElement) {\n  return {\n    get webkitEntries(): HTMLInputElement['webkitEntries'] | undefined {\n      return HasProperty(input, 'webkitEntries') ? input.webkitEntries : undefined;\n    },\n    get webkitdirectory(): HTMLInputElement['webkitdirectory'] | undefined {\n      return HasProperty(input, 'webkitdirectory') ? input.webkitdirectory : undefined;\n    },\n  };\n}\n\nexport function IsWebkitDirectorySupported(): boolean {\n  return IsDeviceMobile() ? false : true;\n}\n",
    "import { JobQueue } from '../../lib/ericchase/Utility/JobQueue.js';\nimport { RecursiveIterator } from '../../lib/ericchase/Utility/RecursiveAsyncIterator.js';\nimport { Sleep } from '../../lib/ericchase/Utility/Sleep.js';\nimport type { SyncAsyncIterable } from '../../lib/ericchase/Utility/Types.js';\nimport { DataTransferItemIterator } from '../../lib/ericchase/Web API/DataTransferItem_Utility.js';\nimport { Compat_File } from '../../lib/ericchase/Web API/File.js';\nimport { FileSystemDirectoryEntryIterator, FileSystemEntryIterator } from '../../lib/ericchase/Web API/FileSystem_Utility.js';\nimport { Compat_HTMLInputElement, IsWebkitDirectorySupported } from '../../lib/ericchase/Web API/HTMLInputElement.js';\n\nexport function setupDragAndDropFilePicker(\n  container: Element,\n  fn: {\n    onDragEnd?: () => void;\n    onDragEnter?: () => void;\n    onDragLeave?: () => void;\n    onDrop?: () => void;\n    onUploadEnd?: () => void | Promise<void>;\n    onUploadError?: (error: any) => void | Promise<void>;\n    onUploadNextFile: (file: File, done: () => void) => Promise<void> | void;\n    onUploadStart?: () => void | Promise<void>;\n  },\n  options?: {\n    accept?: string;\n    directory?: boolean;\n    multiple?: boolean;\n  },\n) {\n  const element = container.querySelector('input');\n  if (!element) {\n    throw 'drag-and-drop-file-picker input element missing';\n  }\n  if (options?.accept) {\n    element.setAttribute('accept', options.accept);\n  }\n  if (options?.directory === true && IsWebkitDirectorySupported()) {\n    element.toggleAttribute('webkitdirectory', true);\n  }\n  if (options?.multiple === true) {\n    element.toggleAttribute('multiple', true);\n  }\n\n  if (fn.onDragEnd || fn.onDragEnter || fn.onDragLeave) {\n    const removeListeners = () => {\n      element.addEventListener('dragleave', dragleaveHandler);\n      element.addEventListener('dragend', dragendHandler);\n      element.addEventListener('drop', dropHandler);\n    };\n    const dragendHandler = () => {\n      removeListeners();\n      fn.onDragEnd?.();\n    };\n    const dragleaveHandler = () => {\n      removeListeners();\n      fn.onDragLeave?.();\n    };\n    const dropHandler = () => {\n      removeListeners();\n      fn.onDrop?.();\n    };\n    element.addEventListener('dragenter', () => {\n      element.addEventListener('dragleave', dragleaveHandler);\n      element.addEventListener('dragend', dragendHandler);\n      element.addEventListener('drop', dropHandler);\n      fn.onDragEnter?.();\n    });\n  }\n\n  const fSEntrySet = new Set<string>();\n  const fSEntryIterator = new RecursiveIterator<FileSystemEntry, FileSystemFileEntry>(async function* (fSEntryIterator, push) {\n    for await (const fSEntry of fSEntryIterator) {\n      const path = fSEntry.fullPath.slice(1);\n      if (!fSEntrySet.has(path)) {\n        fSEntrySet.add(path);\n        const fsEntries = new FileSystemEntryIterator(fSEntry);\n        for (const fSFileEntry of fsEntries.getFileEntry()) {\n          yield fSFileEntry;\n        }\n        for (const fSDirectoryEntry of fsEntries.getDirectoryEntry()) {\n          push(new FileSystemDirectoryEntryIterator(fSDirectoryEntry).getEntry());\n        }\n      }\n    }\n  });\n\n  const jobQueue = new JobQueue<void, string>(-1);\n  jobQueue.subscribe((_, error) => {\n    if (error) {\n      fn?.onUploadError?.(error);\n    }\n  });\n\n  let done = true;\n  let running = false;\n  const uploadStart = async () => {\n    if (running === false) {\n      done = false;\n      running = true;\n      await fn.onUploadStart?.();\n      // give browser some time to queue both events\n      Sleep(500).then(async () => {\n        await jobQueue.done;\n        uploadEnd();\n      });\n    }\n  };\n  const uploadEnd = async () => {\n    done = true;\n    running = false;\n    await fn.onUploadEnd?.();\n    jobQueue.reset();\n    fSEntrySet.clear();\n  };\n  const iterateFSEntries = async (entries: SyncAsyncIterable<FileSystemEntry>, files: FileList) => {\n    if (done === false) {\n      for await (const fSFileEntry of fSEntryIterator.iterate(entries)) {\n        const file = await new Promise<File>((resolve, reject) => fSFileEntry.file(resolve, reject));\n        const reader = new FileReader();\n        reader.readAsText(file);\n        await fn.onUploadNextFile(file, () => {\n          done = true;\n        });\n        // @ts-ignore\n        if (done === true) return;\n      }\n      for (const file of files) {\n        const path = Compat_File(file).webkitRelativePath + file.name;\n        if (!fSEntrySet.has(path)) {\n          fSEntrySet.add(path);\n          if (file.size > 0) {\n            await fn.onUploadNextFile(file, () => {\n              done = true;\n            });\n            // @ts-ignore\n            if (done === true) return;\n          }\n        }\n      }\n    }\n  };\n  const changeHandler = () => {\n    jobQueue.add(async () => {\n      await uploadStart();\n      if (done === false && element instanceof HTMLInputElement && element.files) {\n        await iterateFSEntries(Compat_HTMLInputElement(element).webkitEntries ?? [], element.files);\n      }\n    }, 'changeHandler');\n  };\n  const dropHandler = (event: DragEvent) => {\n    jobQueue.add(async () => {\n      await uploadStart();\n      if (done === false && event.dataTransfer) {\n        const dataTransferItems = new DataTransferItemIterator(event.dataTransfer.items);\n        await iterateFSEntries(dataTransferItems.getAsEntry(), event.dataTransfer.files);\n      }\n    }, 'dropHandler');\n  };\n  element.addEventListener('change', changeHandler);\n  element.addEventListener('drop', dropHandler);\n}\n"
  ],
  "mappings": "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",
  "debugId": "FDA7D1C8F2B90EF764756E2164756E21",
  "names": []
}