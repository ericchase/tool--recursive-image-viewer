{
  "version": 3,
  "sources": ["..\\src\\index.module.ts", "..\\src\\lib\\ericchase\\Design Pattern\\Observer\\Store.ts", "..\\src\\lib\\ericchase\\Utility\\UpdateMarker.ts", "..\\src\\lib\\ericchase\\Utility\\Console.ts", "..\\src\\lib\\ericchase\\Utility\\JobQueue.ts"],
  "sourcesContent": [
    "import { setupDragAndDropFilePicker } from './components/drag-and-drop-file-picker/drag-and-drop-file-picker.module.js';\nimport { JobQueue } from './lib/ericchase/Utility/JobQueue.js';\n\n// ! one day use EventManager\ndocument.documentElement.addEventListener('dragover', (event) => event.preventDefault());\n\nconst file_picker = document.querySelector('.drag-and-drop-file-picker');\nconst main = document.querySelector('main');\n\nlet imageLoadCount = 0;\nconst imageLoadQueue = new JobQueue(-1);\nif (file_picker) {\n  setupDragAndDropFilePicker(\n    file_picker,\n    {\n      onUploadStart() {\n        file_picker.classList.add('hidden');\n        main?.replaceChildren();\n      },\n      onUploadNextFile: addImage,\n      onUploadEnd() {\n        imageLoadQueue.done.then(() => {\n          if (imageLoadCount === 0) {\n            file_picker.classList.remove('hidden');\n            const div = document.createElement('div');\n            div.style.color = 'red';\n            div.textContent = 'No Images Found! Try another folder.';\n            file_picker.querySelector('span')?.append(\n              document.createElement('br'), //\n              document.createElement('br'),\n              div,\n            );\n          }\n        });\n      },\n    },\n    {\n      directory: true,\n      multiple: true,\n    },\n  );\n}\n\nfunction addImage(file: File) {\n  imageLoadQueue.add(\n    () =>\n      new Promise<void>((resolve, reject) => {\n        try {\n          const img = document.createElement('img');\n          const div = document.createElement('div');\n          main?.append(div);\n          img.src = URL.createObjectURL(file);\n          img.addEventListener('load', () => {\n            div.append(img);\n            imageLoadCount++;\n            resolve();\n          });\n          img.addEventListener('error', () => {\n            div.remove();\n            reject();\n          });\n        } catch (_) {\n          reject();\n        }\n      }),\n  );\n}\n",
    "export type SubscriptionCallback<Value> = (value: Value, unsubscribe: () => void) => void;\nexport type UpdateCallback<Value> = (value: Value) => Value;\n\nexport class ConstantStore<Value> {\n  protected subscriptionSet = new Set<SubscriptionCallback<Value>>();\n  constructor(protected value?: Value) {}\n  subscribe(callback: SubscriptionCallback<Value>): () => void {\n    this.subscriptionSet.add(callback);\n    if (this.value !== undefined) {\n      callback(this.value, () => {\n        this.subscriptionSet.delete(callback);\n      });\n    }\n    return () => {\n      this.subscriptionSet.delete(callback);\n    };\n  }\n  get(): Promise<Value> {\n    return new Promise<Value>((resolve) => {\n      this.subscribe((value, unsubscribe) => {\n        unsubscribe();\n        resolve(value);\n      });\n    });\n  }\n  set(value: Value): void {\n    if (this.value === undefined) {\n      this.value = value;\n      for (const callback of this.subscriptionSet) {\n        callback(value, () => {\n          this.subscriptionSet.delete(callback);\n        });\n      }\n    }\n  }\n}\n\nexport class OptionalStore<Value> {\n  protected store: Store<Value | undefined>;\n  constructor(notifyOnChangeOnly = false) {\n    this.store = new Store<Value | undefined>(undefined, notifyOnChangeOnly);\n  }\n  subscribe(callback: SubscriptionCallback<Value | undefined>): () => void {\n    return this.store.subscribe(callback);\n  }\n  get(): Promise<Value | undefined> {\n    return new Promise<Value | undefined>((resolve) => {\n      this.subscribe((value, unsubscribe) => {\n        unsubscribe();\n        resolve(value);\n      });\n    });\n  }\n  set(value: Value | undefined): void {\n    this.store.set(value);\n  }\n  update(callback: UpdateCallback<Value | undefined>): void {\n    this.store.update(callback);\n  }\n}\n\nexport class Store<Value> {\n  protected currentValue: Value;\n  protected subscriptionSet = new Set<SubscriptionCallback<Value>>();\n  constructor(\n    protected initialValue: Value,\n    protected notifyOnChangeOnly = false,\n  ) {\n    this.currentValue = initialValue;\n  }\n  subscribe(callback: SubscriptionCallback<Value>): () => void {\n    this.subscriptionSet.add(callback);\n    const unsubscribe = () => {\n      this.subscriptionSet.delete(callback);\n    };\n    callback(this.currentValue, unsubscribe);\n    return unsubscribe;\n  }\n  get(): Promise<Value> {\n    return new Promise<Value>((resolve) => {\n      this.subscribe((value, unsubscribe) => {\n        unsubscribe();\n        resolve(value);\n      });\n    });\n  }\n  set(value: Value): void {\n    if (this.notifyOnChangeOnly && this.currentValue === value) return;\n    this.currentValue = value;\n    for (const callback of this.subscriptionSet) {\n      callback(value, () => {\n        this.subscriptionSet.delete(callback);\n      });\n    }\n  }\n  update(callback: UpdateCallback<Value>): void {\n    this.set(callback(this.currentValue));\n  }\n}\n\nexport function CompoundSubscription<T extends any[]>(stores: { [K in keyof T]: Store<T[K]> | OptionalStore<T[K]> }, callback: SubscriptionCallback<{ [K in keyof T]: T[K] | undefined }>): () => void {\n  const unsubs: (() => void)[] = [];\n  const unsubscribe = () => {\n    for (const unsub of unsubs) {\n      unsub();\n    }\n  };\n  const values = [] as { [K in keyof T]: T[K] | undefined };\n  const callback_handler = () => {\n    if (values.length === stores.length) {\n      callback(values, unsubscribe);\n    }\n  };\n  for (let i = 0; i < stores.length; i++) {\n    stores[i].subscribe((value, unsubscribe) => {\n      values[i] = value;\n      unsubs[i] = unsubscribe;\n      if (values.length === stores.length) {\n        callback_handler();\n      }\n    });\n  }\n  return unsubscribe;\n}\n\nexport function Once<Value, T extends { subscribe(callback: SubscriptionCallback<Value>): () => void }>(subscribable: T) {\n  return new Promise<Value>((resolve, reject) => {\n    try {\n      let once = false;\n      subscribable.subscribe((value, unsubscribe) => {\n        if (once === true) {\n          unsubscribe();\n          return resolve(value);\n        }\n        once = true;\n      });\n    } catch (error) {\n      return reject(error);\n    }\n  });\n}\n",
    "export class UpdateMarker {\n  updated = false;\n  constructor(readonly $manager: UpdateMarkerManager) {}\n  reset() {\n    this.$manager.resetMarker(this);\n  }\n}\n\nexport class UpdateMarkerManager {\n  $marks = new Set<UpdateMarker>();\n  getNewMarker() {\n    const marker = new UpdateMarker(this);\n    this.$marks.add(marker);\n    return marker;\n  }\n  resetMarker(mark: UpdateMarker) {\n    mark.updated = false;\n    this.$marks.add(mark);\n  }\n  updateMarkers() {\n    for (const mark of this.$marks) {\n      this.$marks.delete(mark);\n      mark.updated = true;\n    }\n  }\n}\n\nexport class DataSetMarker<T> {\n  dataset = new Set<T>();\n  constructor(readonly $manager: DataSetMarkerManager<T>) {}\n  reset() {\n    this.$manager.resetMarker(this);\n  }\n}\n\nexport class DataSetMarkerManager<T> {\n  $marks = new Set<DataSetMarker<T>>();\n  getNewMarker() {\n    const marker = new DataSetMarker<T>(this);\n    this.$marks.add(marker);\n    return marker;\n  }\n  resetMarker(mark: DataSetMarker<T>) {\n    mark.dataset.clear();\n    this.$marks.add(mark);\n  }\n  updateMarkers(data: T) {\n    for (const mark of this.$marks) {\n      mark.dataset.add(data);\n    }\n  }\n}\n",
    "import { UpdateMarkerManager } from './UpdateMarker.js';\n\nconst marker_manager = new UpdateMarkerManager();\nlet newline_count = 0;\n\nexport function GetConsoleMarker() {\n  return marker_manager.getNewMarker();\n}\n\nexport function ConsoleError(...items: any[]) {\n  // biome-ignore lint: this let's us search for undesired console[error]s\n  console['error'](...items);\n  newline_count = 0;\n  marker_manager.updateMarkers();\n}\n\nexport function ConsoleErrorWithDate(...items: any[]) {\n  // biome-ignore lint: this let's us search for undesired console[error]s\n  console['error'](`[${new Date().toLocaleTimeString()}]`, ...items);\n  newline_count = 0;\n  marker_manager.updateMarkers();\n}\n\nexport function ConsoleLog(...items: any[]) {\n  // biome-ignore lint: this let's us search for undesired console[log]s\n  console['log'](...items);\n  newline_count = 0;\n  marker_manager.updateMarkers();\n}\n\nexport function ConsoleLogWithDate(...items: any[]) {\n  // biome-ignore lint: this let's us search for undesired console[log]s\n  console['log'](`[${new Date().toLocaleTimeString()}]`, ...items);\n  newline_count = 0;\n  marker_manager.updateMarkers();\n}\n\nexport function ConsoleNewline(ensure_count = 1) {\n  for (let i = newline_count; i < ensure_count; i++) {\n    // biome-ignore lint: this let's us search for undesired console[log]s\n    console['log']();\n    newline_count++;\n  }\n  marker_manager.updateMarkers();\n}\n\nexport function ConsoleLogToLines(items: Iterable<any>) {\n  if (typeof items === 'string') {\n    ConsoleLog(items);\n  } else {\n    for (const item of items) {\n      ConsoleLog(item);\n    }\n  }\n}\n\nexport function ConsoleErrorToLines(items: Iterable<any>) {\n  if (typeof items === 'string') {\n    ConsoleError(items);\n  } else {\n    for (const item of items) {\n      ConsoleError(item);\n    }\n  }\n}\n",
    "import { Store } from '../Design Pattern/Observer/Store.js';\nimport { ConsoleLog } from './Console.js';\n\nexport type SubscriptionCallback<Result, Tag> = (result?: Result, error?: Error, tag?: Tag) => { abort: boolean } | void;\n\nexport class JobQueue<Result = void, Tag = void> {\n  /**\n   * 0: No delay. -1: Consecutive.\n   */\n  constructor(public delay_ms: number) {}\n  /**\n   * ! Watch out for circular calls !\n   *\n   * Sets the `aborted` state and resolves when currently running jobs finish.\n   */\n  public async abort() {\n    this.aborted = true;\n    await this.done;\n  }\n  public add(fn: () => Promise<Result>, tag?: Tag) {\n    if (this.aborted === false) {\n      this.queue.push({ fn, tag });\n      if (this.running === false) {\n        this.running = true;\n        this.run();\n      }\n    }\n  }\n  /**\n   * Returns a promise that resolves when jobs finish.\n   */\n  public get done() {\n    return new Promise<void>((resolve) => {\n      this.runningCount.subscribe((count) => {\n        if (count === 0) resolve();\n      });\n    });\n  }\n  /**\n   * Resets the JobQueue to an initial state, keeping subscriptions alive.\n   *\n   * @throws If called when jobs are currently running.\n   */\n  public async reset() {\n    if (this.running === true || (await this.runningCount.get()) > 0) {\n      throw 'Warning: Wait for running jobs to finish before calling reset. `await JobQueue.done;`';\n    }\n    this.aborted = false;\n    this.completionCount = 0;\n    this.queue.length = 0;\n    this.queueIndex = 0;\n    this.results.length = 0;\n  }\n  public subscribe(callback: SubscriptionCallback<Result, Tag>): () => void {\n    this.subscriptionSet.add(callback);\n    for (const result of this.results) {\n      if (callback(result.value, result.error)?.abort === true) {\n        this.subscriptionSet.delete(callback);\n        return () => {};\n      }\n    }\n    return () => {\n      this.subscriptionSet.delete(callback);\n    };\n  }\n  protected aborted = false;\n  protected completionCount = 0;\n  protected queue: { fn: () => Promise<Result>; tag?: Tag }[] = [];\n  protected queueIndex = 0;\n  protected results: { value?: Result; error?: Error }[] = [];\n  protected running = false;\n  protected runningCount = new Store(0);\n  protected subscriptionSet = new Set<SubscriptionCallback<Result, Tag>>();\n  protected run() {\n    if (this.aborted === false && this.queueIndex < this.queue.length) {\n      const { fn, tag } = this.queue[this.queueIndex++];\n      /* eslint-disable @typescript-eslint/no-floating-promises */\n      (async () => {\n        /* eslint-enable @typescript-eslint/no-floating-promises */\n        this.runningCount.update((count) => {\n          return count + 1;\n        });\n        try {\n          const value = await fn();\n          this.send({ value, tag });\n        } catch (error: any) {\n          ConsoleLog(error);\n          this.send({ error, tag });\n        }\n        this.runningCount.update((count) => {\n          return count - 1;\n        });\n        if (this.delay_ms < 0) {\n          this.run();\n        }\n      })();\n      if (this.delay_ms >= 0) {\n        setTimeout(() => this.run(), this.delay_ms);\n      }\n    } else {\n      this.running = false;\n    }\n  }\n  protected send(result: { value?: Result; error?: Error; tag?: Tag }) {\n    if (this.aborted === false) {\n      this.completionCount++;\n      this.results.push(result);\n      for (const callback of this.subscriptionSet) {\n        if (callback(result.value, result.error, result.tag)?.abort === true) {\n          this.subscriptionSet.delete(callback);\n        }\n      }\n    }\n  }\n}\n"
  ],
  "mappings": "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",
  "debugId": "A647950EC4E5949564756E2164756E21",
  "names": []
}